@*@model IEnumerable<Bonsaii.Models.Staff>*@
@model PagedList.IPagedList<Bonsaii.Models.Staff>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@using (Html.BeginForm("Create", "Staff", FormMethod.Get))
{
    <div class="form-group form-inline">

        <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span>创建</button>
    </div>

}
@using (Html.BeginForm("Index", "Staff", FormMethod.Get))
{
    <div class="form-group form-inline">

        <input type="text" name="SearchString" placeholder="请输入员工号....." class="form-control" />
        <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-search"></span>查询</button>


    </div>
}


@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
<table class="table table-hover table-striped table-bordered">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.First().BillTypeName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().BillTypeNumber)
        </th>
        <th>
            @Html.ActionLink("工号", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            @Html.DisplayNameFor(model => model.First().StaffNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Department)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WorkType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Position)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().IdentificationType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Nationality)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().IdentificationNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Entrydate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ClassOrder)
        </th>
        
        <th>
            @Html.DisplayNameFor(model => model.First().JobState)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().AbnormalChange)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FreeCard)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().WorkProperty)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().ApplyOvertimeSwitch)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Source)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().QualifyingPeriodFull)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().MaritalStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().BirthDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().NativePlace)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().HealthCondition)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Nation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().VisaOffice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().HomeTelNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().EducationBackground)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().GraduationSchool)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SchoolMajor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Degree)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Introducer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().IndividualTelNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().BankCardNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().UrgencyContactMan)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().UrgencyContactAddress)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().UrgencyContactPhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().InBlacklist)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().PhysicalCardNumber)
        </th>
       
        <th>
            @Html.DisplayNameFor(model => model.First().AuditStatus)
        </th>
       
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <button class="btn btn-success">@Html.ActionLink("Edit", "Edit", new { id = item.Number })</button>
                <button class="btn btn-success">
                    @Html.ActionLink("Details", "Details", new { id = item.Number })
                </button>
                <button class="btn btn-success"> @Html.ActionLink("Delete", "Delete", new { id = item.Number })</button>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BillTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BillTypeNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StaffNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WorkType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdentificationType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nationality)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdentificationNumber)
            </td>
            <td>
                @item.Entrydate.Value.ToShortDateString()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassOrder)
            </td>
           
            <td>
                @Html.DisplayFor(modelItem => item.JobState)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AbnormalChange)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FreeCard)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WorkProperty)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplyOvertimeSwitch)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Source)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QualifyingPeriodFull)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaritalStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NativePlace)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HealthCondition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VisaOffice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HomeTelNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EducationBackground)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GraduationSchool)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SchoolMajor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Degree)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Introducer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IndividualTelNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BankCardNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UrgencyContactMan)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UrgencyContactAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UrgencyContactPhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InBlacklist)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhysicalCardNumber)
            </td>
           
          
            <td>
                @Html.DisplayFor(modelItem => item.AuditStatus)
            </td>
           

        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))